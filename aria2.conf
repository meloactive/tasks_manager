#=================================================================
# https://gist.github.com/Mogeko/64a20bc441cb43a7b26e416270c10168
# https://github.com/P3TERX/aria2.conf (upstream)
# File name：aria2.conf
# Description: Aria2 config file
# License: MIT
# Author: Mogeko, P3TERX
# Blog: https://p3terx.com for P3TERX
#       https://mogeko.me  for Mogeko
#=================================================================

## RPC settings##

# Enable RPC, default: false
#enable-rpc=true
# Accept all remote requests, default: false
rpc-allow-origin-all=true
# Allow external access, default: false
rpc-listen-all=true
# RPC listening port, can be modified when the port is occupied, default: 6800
rpc-listen-port=6800
# Set the RPC authorization key
# rpc-secret=MOGEKO
# Whether to enable SSL/TLS encryption for RPC services
# After encryption is enabled, the RPC service must use https or wss protocol to connect
# It is generally not recommended to open it. It is recommended to use a web server to reverse the generation, such as Nginx and Caddy, which is more flexible.
rpc-secure=false
# Certificate file (.pem/.crt) when SSL/TLS encryption is enabled in RPC service
#rpc-certificate=/config/xxx.pem
# The private key file (.key) when SSL/TLS encryption is enabled in the RPC service
#rpc-private-key=/config/xxx.key
# Event polling method, value: [epoll, kqueue, port, poll, select], the default value is different for different systems
#event-poll=select

## File save settings##

# File save path (absolute path or relative path can be used), default: current startup location
# dir=$HOME/Downloads/.aria2_tmp
# Enable disk cache, 0 is to disable cache, default: 16M
# It is recommended that the local router or NAS be set to an appropriate size when there is enough free memory to reduce disk I/O and prolong the life of the hard disk.
disk-cache=64M
# File preallocation method, default: prealloc
# It is recommended to set the mechanical hard disk to falloc, which can reduce the head beat and prolong the life.
# It is recommended to set the SSD to none, which can reduce the amount of data writing and prolong the life.
# If it cannot be downloaded, it will prompt fallocate failed.cause: Operation not supported, it means it is not supported, please set it to none
file-allocation=falloc
# http
continue=true
# Get server file time, default: false
remote-time=true

## Progress save settings##

# Read download tasks from session file
# input-file=$HOME/.aria2/aria2.session
# Save `error/incomplete` download tasks to session file when Aria2 exits
save-session=$HOME/.aria2/aria2.session
# Save the session time (seconds) regularly, 0 is to save only when exiting, requires version 1.16.1 or above, default: 0
save-session-interval=1
# Automatically save task progress time (seconds), 0 is to save when exiting, default: 60
auto-save-interval=1
# Force saving session, even if the task has been completed, default: false
# After opening, the .aria2 file will remain after the task is completed. If the file is removed and the task exists, it will be downloaded again after restarting.
# The list of completed tasks after shutdown will be cleared after restart.
# It is recommended to enable PT download for continuous seeding to prevent the list from being emptied after an accidental restart.
force-save=false

## Download connection settings##

# File not found retries, default: 0
# The number of retries will also be recorded when retrying, so you also need to set the --max-tries option
max-file-not-found=5
# Maximum number of attempts, 0 means unlimited, default: 5
max-tries=0
# Retry wait time (seconds), default: 0
retry-wait=10
# Maximum number of simultaneous download tasks, can be modified at runtime, default: 5
max-concurrent-downloads=5
# The number of connections to the same server, can be specified when adding, default: 1 (the official original maximum limit is 16)
max-connection-per-server=16
# The maximum number of threads for a single task, which can be specified when adding, default: 5
split=64
# Minimum download speed limit. When the download speed is lower than or equal to the value of this option, close the connection (special version will reconnect), this option does not affect the BT download. Unit K or M, default: 0
#lowest-speed-limit=1M
# Minimum file fragment size, can be specified when adding, the value range is 1M -1024M, default: 20M
# Assuming size=10M, if the file is 20MiB, use two sources to download; if the file is 15MiB, use one source to download
min-split-size=4M
# The overall download speed limit, can be modified at runtime, default: 0
max-overall-download-limit=0
# Download speed limit for a single task, default: 0
max-download-limit=0
# disable IPv6, default: false
disable-ipv6=true
# Support GZip, default: false
http-accept-gzip=true
# URI reuse, default: true
reuse-uri=false
# Disable netrc support, default: false
no-netrc=true
# Allow overwriting, redownloading from scratch when the associated control file does not exist. Default: false
allow-overwrite=false
# File auto-rename, this option is only valid in HTTP(S)/FTP download. The new filename has a dot and a number (1..9999) after the name and before the extension. Default: true
auto-file-renaming=true
# Use UTF-8 to handle Content-Disposition, default: false
content-disposition-default-utf8=true
# Minimum TLS version, optional TLSv1.1, TLSv1.2, TLSv1.3 Default: TLSv1.2
#min-tls-version=TLSv1.2

##BT/PT download settings##

# When a torrent (ending with .torrent) is downloaded, automatically start the BT task, default: true, optional: false|mem
follow-torrent=true
# BT listening port (TCP), default: 6881-6999
listen-port=51413
# DHT network listening port (UDP), default: 6881-6999
dht-listen-port=51413
# Enable IPv4 DHT function, PT needs to be disabled, default: true
enable-dht=true
# Enable IPv6 DHT function, PT needs to be disabled, default: false
# It is not recommended to enable it in an environment without IPv6, otherwise the DHT function will be abnormal.
enable-dht6=false
# DHT (IPv4) file
dht-file-path=$HOME/.aria2/dht.dat
# DHT (IPv6) file
dht-file-path6=$HOME/.aria2/dht6.dat
# Set up IPv4 DHT network boot node
dht-entry-point=dht.transmissionbt.com:6881
# Set up IPv6 DHT network boot node
dht-entry-point6=dht.transmissionbt.com:6881
# Local node search, PT needs to be disabled, default: false
bt-enable-lpd=true
# Seed exchange, PT needs to be disabled, default: true
enable-peer-exchange=true
# The maximum number of connections for a single seed, 0 is unlimited, default: 55
bt-max-peers=0
# Expect the download speed, Aria2 will temporarily increase the number of connections to increase the download speed, in K or M. Default: 50K
bt-request-peer-speed-limit=10M
# Global maximum upload speed limit, can be modified at runtime, default: 0
max-overall-upload-limit=5M
# Upload speed limit for a single task, default: 0
max-upload-limit=0
# When the sharing rate of seeds reaches this number, automatically stop seeding, 0 means seeding all the time, default: 1.0
seed-ratio=1.0
# Minimum seeding time (minutes). When this option is set to 0, seeding will not be performed after the download of the BT task is completed.
seed-time=0
# Check file hash before seeding, default: true
bt-hash-check-seed=true
# When continuing the previous BT task, no need to check again, default: false
bt-seed-unverified=false
# Save the magnet link metadata as a torrent file (.torrent file), default: false
bt-save-metadata=false
# Load saved metadata file, default: false
bt-load-saved-metadata=true
# Delete unselected files, default: false
bt-remove-unselected-file=true
# Save the uploaded torrent, default: true
rpc-save-upload-metadata=true
# BT forced encryption, default: false
# When enabled will reject the old BT handshake protocol and use only obfuscated handshake and encryption. There are certain anti-copyright complaints and Thunder blood-sucking effects.
# This option is equivalent to the shortcut opening of the latter two options (bt-require-crypto=true, bt-min-crypto-level=arc4), but will not modify the values ​​of these two options.
bt-force-encryption=true
# BT encryption requirements, default: false
# When enabled, refuse to establish a connection with the old BitTorrent handshake protocol (\19BitTorrent protocol), always use the obfuscated handshake.
#bt-require-crypto=true
# BT minimum encryption level, optional: plain (plain text), arc4 (encryption), default: plain
#bt-min-crypto-level=arc4
# client masquerading
user-agent=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36 Edg/81.0.416.68
# PT needs to keep the two parameters of user-agent and peer-agent the same. That is, comment the line above, and then uncomment the relevant options below.
#user-agent=qBittorrent/4.2.5
peer-agent=qBittorrent/4.2.5
peer-id-prefix=-qB4250-
#----------------------------------
#user-agent=Transmission 2.94
#peer-agent=Transmission 2.94
#peer-id-prefix=-TR2940-
#----------------------------------
#user-agent=Deluge 2.0.3
#peer-agent=Deluge 2.0.3
#peer-id-prefix=-DE2030-
#----------------------------------
#user-agent=μTorrent 3.5.5
#peer-agent=μTorrent 3.5.5
#peer-id-prefix=-UT355W-
#----------------------------------
#user-agent=μTorrent Mac 1.8.7
#peer-agent=μTorrent Mac 1.8.7
#peer-id-prefix=-UM1870-

## Execute additional commands ##

# The command to execute after the download stops
#on-download-stop=
# The command to be executed after the download is completed, if this item is not defined, the command to be executed after the download is stopped (on-download-stop)
on-download-complete=$HOME/.aria2/arrange.sh
# The command executed after the download error, if this item is not defined, execute the command executed after the download is stopped (on-download-stop)
#on-download-error=
# The command to be ex